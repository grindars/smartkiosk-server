table_for(terminal.pings, :class => 'index_table index', :i18n => TerminalPing) do |t|
  t.column :created_at
  t.column :condition do |x|
    status_tag I18n.t("smartkiosk.terminal_conditions.#{x.condition}"), x.condition.to_sym
  end
  t.column :state do |x|
    I18n.t "smartkiosk.terminal_states.#{x.state}"
  end
  t.column :version
  t.column :ip
  t.column :queues do |x|
    ul do
      x.queues.each do |queue, count|
        li :style => 'white-space: nowrap' do
          b queue+':'
          span count
        end
      end
    end
  end
  t.column :banknotes do |x|
    ul do
      x.banknotes.each do |banknote, count|
        li :style => 'white-space: nowrap' do
          b banknote+':'
          span count
        end
      end
    end
  end
  t.column :cash_sum
  t.column :cash_count
  t.column :cash_acceptor_error do |x|
    div :style => 'white-space: nowrap' do
      if x.cash_acceptor_error.blank?
        status_tag I18n.t('formtastic.no'), :ok
      else
        status_tag I18n.t('smartkiosk.hardware.cash_acceptor.errors')[x.cash_acceptor_error], :error
      end
    end
  end
  t.column :cash_acceptor_version
  t.column :printer_error do |x|
    div :style => 'white-space: nowrap' do
      if x.printer_error.blank?
        status_tag I18n.t('formtastic.no'), :ok
      else
        status_tag I18n.t('smartkiosk.hardware.printer.errors')[x.printer_error], :error
      end
    end
  end
  t.column :printer_version
  t.column :modem_balance
  t.column :modem_signal_level
  t.column :modem_version
end